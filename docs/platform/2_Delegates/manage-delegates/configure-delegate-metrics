  ---
title: Configure delegate metrics
description: This topic describes how to configure Prometheus and Grafana for delegate metrics collection.
# sidebar_position: 2
---

## About delegate metrics

Harness captures delegate agent metrics for delegates that are immutable. The following metrics are recorded:

| **Metric name** | **Description** |
| :-- | :-- |
| task_execution_time | The time it takes to complete a task. |
| tasks_currently_executing | The number of tasks underway. |
| tasks_in_queue | The number of tasks that are waiting in the queue. |
| task_timeout | The number of tasks that time out before completion. |

## Configure Prometheus database

You can use Prometheus to collect delegate metrics. Prometheus “scrapes” metrics from the delegate replica pods you deploy in a cluster. To collect delegate metrics, Prometheus must be configured with the following settings. The configuration of Prometheus is specified as a Kubernetes ConfigMap and saved as a prometheus.yml file. For a prometheus.yml file configured with the settings described in this document, see the last section.

### Configure the namespace

Prometheus must be configured to use the namespace to which your delegates were deployed. 

```
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-delegate-conf
  Labels:
    name: prometheus-delegate-conf
  namespace: harness-delegate-ng
```

You can skip this step if you’re using the Harness prometheus.yml file and your delegates are deployed to the `harness-delegate-ng` namespace. This namespace is configured in the prometheus.yml file by default. 

### Apply the prometheus.yml file

Deploy the Prometheus configuration map. Use the following command:

```
kubectl apply -f prometheus.yml
```

### Confirm the configuration

If Prometheus is correctly configured, you should be able to see metrics collection. To check, use the following command to port-forward the Prometheus service:

```
kubectl port-forward {prometheus-pod-name} 8084:9090 -n {namespace}
```

In this command, you replace `{prometheus-pod-name}` with the name of the deployed Prometheus pod. You replace `{namespace}` with the namespace from the `metadata.namespace` field in the prometheus.yml file. 

```
kubectl port-forward prometheus-deployment-7fd6bcf85-5gm8j 8084:9090 -n harness-delegate-ng
```

As shown in this example, the default namespace is `harness-delegate-ng`.

The Prometheus service runs at port 8084 with a target port of 9090.

```
apiVersion: v1
kind: Service
metadata:
  name: harness-delegate-prometheus-service
  namespace: harness-delegate-ng
spec:
  selector:
    app: prometheus-delegate
  type: LoadBalancer
  ports:
port: 8084
     targetPort: 9090
```

These values are specified in the definition of the Prometheus service in the prometheus.yml file.





